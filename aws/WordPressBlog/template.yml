---
# Non creare EC2, usa launch template dell'autoscaling group
# Puoi definire dei parametri e poi li passi dalla CLI o dalla console
AWSTemplateFormatVersion: "2010-09-09"
Description: "AWS CloudFormation Template for WordPress"
Resources:
  ##### VPC #####
  WpVPC:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: "10.0.0.0/16"

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties: {}
  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref WpVPC
      InternetGatewayId: !Ref InternetGateway

  ##### SUBNETS #####
  # AZ1
  SubnetA:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref WpVPC
      CidrBlock: "10.0.1.0/24"
      AvailabilityZone: "us-east-1a"

  # AZ2
  SubnetB:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref WpVPC
      CidrBlock: "10.0.2.0/24"
      AvailabilityZone: "us-east-1b"

  ##### SECURITY GROUPS #####
  # Exposed to the Internet
  ALBSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Enable HTTP access via port 80"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: "80"
          ToPort: "80"
          CidrIp: "0.0.0.0/0"

  # EC2
  WPSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Enable access only from LoadBalancer SecurityGroup "
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: "80"
          ToPort: "80"
          SourceSecurityGroupId: !Ref ALBSecurityGroup

  # EFS
  EFS_SecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Enable access from WPSecurityGroup "
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: "2049"
          ToPort: "2049"
        - IpProtocol: udp
          FromPort: "2049"
          ToPort: "2049"
          SourceSecurityGroupId: !Ref WPSecurityGroup

  # MySQL
  RDS_SecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Enable access only from WPSecurityGroup"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: "3306"
          ToPort: "3306"
          SourceSecurityGroupId: !Ref WPSecurityGroup

  ##### RESOURCES #####
  RDS:
    Type: "AWS::RDS::DBInstance"
    DeletionPolicy: Delete
    Properties:
      AllocatedStorage: "5"
      DBInstanceClass: "db.t2.micro"
      DBInstanceIdentifier: "wp-mysql"
      DBName: "wp-mysql"
      Engine: "mysql"
      EngineVersion: "5.6"
      BackupRetentionPeriod: 0
      VPCSecurityGroups:
        - !Sub ${RDS_SecurityGroup.GroupId}
      DBSubnetGroupName: !Ref DBSubnetGroup
  DBSubnetGroup:
    Type: "AWS::RDS::DBSubnetGroup"
    Properties:
      Description: DB subnet group
      SubnetIds:
        - Ref: SubnetA
        - Ref: SubnetB

  ALB:
    Type: "AWS::ElasticLoadBalancingV2::LoadBalancer"
    Properties:
      Name: "my-alb"
      Subnets:
        - !Ref SubnetA
        - !Ref SubnetB
      SecurityGroups:
        - !Ref ALBSecurityGroup
      Scheme: "internet-facing"
      LoadBalancerAttributes:
        - Key: "idle_timeout.timeout_seconds"
          Value: "60"

  AutoScalingGroup:
    Type: "AWS::AutoScaling::AutoScalingGroup"
    Properties:
      VPCZoneIdentifier:
        - !Ref MySubnetA
        - !Ref MySubnetB
      LaunchConfigurationName: !Ref MyLaunchConfig
      MinSize: "2"
      MaxSize: "4"

  WPInstance:
    Type: "AWS::EC2::Instance"
    Properties:
      ImageId: "ami-0c55b159cbfafe1f0"
      InstanceType: "t2.micro"
      KeyName: "mykey"
      SecurityGroupIds:
        - !Ref WPSecurityGroup
      SubnetId: !Ref SubnetA
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe
          yum update -y
          yum install -y httpd24 php56 mysql55-server php56-mysqlnd
          service httpd start
          chkconfig httpd on
          echo "<?php phpinfo(); ?>" > /var/www/html/phpinfo.php
