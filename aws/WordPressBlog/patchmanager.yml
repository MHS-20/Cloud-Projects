MaintenanceWindow:
 Type: 'AWS::SSM::MaintenanceWindow'
 Properties:
 AllowUnassociatedTargets: false
 Duration: 2
 Cutoff: 1
Name: !Ref 'AWS::StackName'
Schedule: 'cron(0 5 ? * SUN *)'
ScheduleTimezone: UTC
MaintenanceWindowTarget:
  Type: 'AWS::SSM::MaintenanceWindowTarget'
  Properties:
    ResourceType: INSTANCE
    Targets:
      - Key: InstanceIds
        Values:
          - !Ref Instance
    WindowId: !Ref MaintenanceWindow
MaintenanceWindowTask:
  Type: 'AWS::SSM::MaintenanceWindowTask'
  Properties:
    MaxConcurrency: '1'
    MaxErrors: '1'
    Priority: 0
    Targets:
      - Key: WindowTargetIds
        Values:
          - !Ref MaintenanceWindowTarget
    TaskArn: 'AWS-RunPatchBaseline'
    TaskInvocationParameters:
      MaintenanceWindowRunCommandParameters:
        Parameters:
          Operation:
            - Install
        TaskType: 'RUN_COMMAND'
        WindowId: !Ref MaintenanceWindow
AssociationRunPatchBaselineInstall:
  Type: 'AWS::SSM::Association'
  Properties:
    Name: 'AWS-RunPatchBaseline'
    Parameters:
      Operation:
        - Install
    Targets:
      - Key: InstanceIds
        Values:
          - !Ref Instance
InstanceRole:
  Type: 'AWS::IAM::Role'
  Properties:
    #[...]
    Policies:
      - PolicyName: PatchManager
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: 's3:GetObject'
              Resource:
                - !Sub 'arn:aws:s3:::patch-baseline-snapshot-${AWS::Region}/*'
                - !Sub 'arn:aws:s3:::aws-ssm-${AWS::Region}/*'
AssociationRunPatchBaselineScan:
 Type: 'AWS::SSM::Association'
 Properties:
 ApplyOnlyAtCronInterval: true
 Name: 'AWS-RunPatchBaseline'
 Parameters:
 Operation:
 - Scan
 ScheduleExpression: 'cron(0 0/1 * * ? *)'
 Targets:
 - Key: InstanceIds
Values:
  - Key: !ImportValue Instance
